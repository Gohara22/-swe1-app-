name: Django CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Display Python and package versions
      run: |
        python --version
        pip list
        
    - name: Check code formatting with black
      run: |
        echo "Checking code formatting with black..."
        python -m black --check . --diff --color
        
    - name: Lint with flake8
      run: |
        echo "Running flake8 linter..."
        python -m flake8 . --show-source --statistics
        
    - name: Run Django system checks
      run: |
        echo "Running Django system checks..."
        python manage.py check
        
    - name: Run tests with coverage
      run: |
        echo "Running tests with coverage..."
        python -m coverage run --source='.' manage.py test --verbosity=2
        python -m coverage xml
        echo "Coverage report:"
        python -m coverage report
        
    - name: Upload coverage to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && contains(github.event.head_commit.message, '[deploy]')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
      continue-on-error: true
        
    - name: Deploy to Elastic Beanstalk
      if: env.AWS_ACCESS_KEY_ID != ''
      run: |
        echo "Deployment would happen here when AWS credentials are configured"
        echo "Skipping deployment for now..."
      continue-on-error: true